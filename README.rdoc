= Backgrounded

Background processing done right.

= Features
* clean and concise API
* testable
* integrates with any background processing framework (DelayedJob, JobFu, Workling, etc)

= Usage

  #declaration
  class User
    backgrounded :do_stuff
    def do_stuff
      # do all your work here
    end
  end

  #usage
  user = User.new
  user.do_stuff_backgrounded

= Installation

Command line installation

  sudo gem install wireframe-backgrounded

Rails environment.rb configuration

  config.gem 'wireframe-backgrounded', :source => 'http://gems.github.com', :lib => 'backgrounded'

= Configuration

Backgrounded provides a thin wrapper around any background processing framework that implements the Backgrounded handler API.  This makes it trivial to swap out processing frameworks with no impact on your code.

= DelayedJob

An implementation for DelayedJob is packaged directly with Backgrounded for a slick out of the box experience.
see http://github.com/tobi/delayed_job/tree/master

  # config/initializers/backgrounded.rb
  Backgrounded.handler = Backgrounded::Handler::DelayedJobHandler.new

= JobFu

Developers using the JobFu library have it easy as well!
see http://github.com/jnstq/job_fu/tree

  # config/initializers/backgrounded.rb
  Backgrounded.handler = JobFu::Backgrounded::Handler.new

= Custom Handlers

It's trivial to write your own plugin for processing Backgrounded events! 

  # config/initializers/backgrounded.rb
  class MyHandler
    def request(object, method, *args)
      #process the call however you want!
    end
  end
  Backgrounded.handler = MyHandler.new

== Copyright

Copyright (c) 2009 Ryan Sonnek. See LICENSE for details.
